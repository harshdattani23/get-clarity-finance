// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  clerkId              String               @id @unique
  email                String               @unique
  username             String?
  investmentExperience InvestmentExperience?
  onboarded            Boolean              @default(false)
  virtualCash          Decimal              @default(100000.00)
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  courseProgress       CourseProgress[]
  holdings             PortfolioHolding[]
  virtualTrades        VirtualTrade[]
  watchlists           Watchlist[]
}

model CourseProgress {
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [userClerkId], references: [clerkId])
  userClerkId String
  courseId  String
  lessonId  String
  status    CourseStatus @default(NOT_STARTED)
  completedAt DateTime?

  @@unique([userClerkId, courseId, lessonId])
}

model PortfolioHolding {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userClerkId], references: [clerkId])
  userClerkId  String
  ticker       String
  quantity     Int
  averagePrice Decimal
  updatedAt    DateTime @updatedAt

  @@unique([userClerkId, ticker])
}

model VirtualTrade {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userClerkId], references: [clerkId])
  userClerkId String
  ticker    String
  quantity  Int
  price     Decimal
  tradeType TradeType
  tradedAt  DateTime @default(now())
}

model Watchlist {
  id        Int             @id @default(autoincrement())
  name      String          @default("My Watchlist")
  user      User            @relation(fields: [userClerkId], references: [clerkId])
  userClerkId String
  items     WatchlistItem[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model WatchlistItem {
  id          Int       @id @default(autoincrement())
  watchlist   Watchlist @relation(fields: [watchlistId], references: [id])
  watchlistId Int
  ticker      String
  createdAt   DateTime  @default(now())

  @@unique([watchlistId, ticker])
}

enum InvestmentExperience {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum CourseStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum TradeType {
  BUY
  SELL
}
