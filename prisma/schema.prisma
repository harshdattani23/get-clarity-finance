generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  clerkId              String                @id @unique
  email                String                @unique
  username             String?
  investmentExperience InvestmentExperience?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  onboarded            Boolean               @default(false)
  virtualCash          Decimal               @default(1000000.00)
  courseProgress       CourseProgress[]
  holdings             PortfolioHolding[]
  virtualTrades        VirtualTrade[]
  watchlists           Watchlist[]
}

model CourseProgress {
  id          Int          @id @default(autoincrement())
  userClerkId String
  courseId    String
  lessonId    String
  status      CourseStatus @default(NOT_STARTED)
  completedAt DateTime?
  user        User         @relation(fields: [userClerkId], references: [clerkId])

  @@unique([userClerkId, courseId, lessonId])
}

model PortfolioHolding {
  id           Int      @id @default(autoincrement())
  userClerkId  String
  ticker       String
  quantity     Int
  averagePrice Decimal
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userClerkId], references: [clerkId])

  @@unique([userClerkId, ticker])
}

model VirtualTrade {
  id          Int       @id @default(autoincrement())
  userClerkId String
  ticker      String
  quantity    Int
  price       Decimal
  tradeType   TradeType
  tradedAt    DateTime  @default(now())
  user        User      @relation(fields: [userClerkId], references: [clerkId])
}

model Watchlist {
  id          Int             @id @default(autoincrement())
  userClerkId String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String          @default("My Watchlist")
  user        User            @relation(fields: [userClerkId], references: [clerkId])
  items       WatchlistItem[]

  @@unique([userClerkId, name])
}

model WatchlistItem {
  id          Int       @id @default(autoincrement())
  watchlistId Int
  ticker      String
  createdAt   DateTime  @default(now())
  watchlist   Watchlist @relation(fields: [watchlistId], references: [id], onDelete: Cascade)

  @@unique([watchlistId, ticker])
}

model Stock {
  id            Int       @id @default(autoincrement())
  ticker        String    @unique
  name          String
  industry      String
  marketCap     String
  indices       String[]
  price         Decimal?
  change        Decimal?
  percentChange Decimal?
  volume        Decimal?
  lastUpdatedAt DateTime?
}

enum InvestmentExperience {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum CourseStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum TradeType {
  BUY
  SELL
}
